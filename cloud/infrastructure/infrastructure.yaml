Description: "Holm Hinrichs, Project Capstone, Infrastructure Part"

Parameters:
  EnvironmentName:
    Type: String
  CIDRVpc:
    Description: "IP Range in VPC"
    Type: String
    Default: 10.0.0.0/16

#VPC
Resources:
  capstone21VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CIDRVpc
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName

  ## InternetGateWay
  capstone21IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EaSimpleStack/pontonEA Cluster
          
  capstone21VPCAttac:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: capstone21VPC
      InternetGatewayId:
        Ref: capstone21IGW

  ## Private Subnet Block
  capstone21privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/26
      VpcId:
        Ref: capstone21VPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: PrivateSubnet
        - Key: EnvironmentName
          Value: !Ref EnvironmentName


  capstone21privateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: capstone21VPC
      Tags:
        - Key: Name
          Value: privateSubnetSubnet1RouteTable
        - Key: EnvironmentName
          Value: !Ref EnvironmentName


  capstone21privateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: capstone21privateSubnetRouteTable
      SubnetId:
        Ref: capstone21privateSubnet

  capstone21privateSubnetDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: capstone21privateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: capstone21publicSubnetNATGateway

  ## Public Subnet Block
  capstone21publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.128/26
      VpcId:
        Ref: capstone21VPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: publicSubnetSubnet
        - Key: kubernetes.io/role/elb
          Value: "1"

  capstone21publicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: capstone21VPC
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"

  capstone21publicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: capstone21publicSubnetRouteTable
      SubnetId:
        Ref: capstone21publicSubnet

  capstone21publicSubnetDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: capstone21publicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: capstone21IGW
    DependsOn:
      - capstone21VPCAttac

## Elastic IP
  EIP1:
    Type: AWS::EC2::EIP
    DependsOn: capstone21VPCAttac
    Properties:
      Domain: vpc
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName


## NAT Gateway
  capstone21publicSubnetNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: capstone21publicSubnet
      AllocationId: !GetAtt EIP1.AllocationId
      Tags:
        - Key: kubernetes.io/role/elb
          Value: "1"
        - Key: EnvironmentName
          Value: !Ref EnvironmentName


# Kubernetes AdminRole
  CapstoneAdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"

# Kubernetes Role
  Capstone21EKSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: eks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonEKSClusterPolicy
## Security Group for Cluster
  controlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Control Plane Security Group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: capstone21VPC

## EKS Cluster
  capstone21Cluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: capstone21Cluster
      Version: '1.21'
      RoleArn: arn:aws:iam::188794860952:role/eksDummyRole
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref controlPlaneSecurityGroup
        SubnetIds:
          - !Ref capstone21publicSubnet
          - !Ref capstone21privateSubnet
    DependsOn:
      - controlPlaneSecurityGroup
      - capstone21publicSubnet
      - capstone21privateSubnet





## EKS NodeGroup
  capstone21NodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: AL2_x86_64
      ClusterName: capstone21Cluster
      NodeRole: arn:aws:iam::188794860952:role/EKS_NodeRole
      InstanceTypes:
        - t3.micro
      ScalingConfig:
        MinSize: 1
        DesiredSize: 2
        MaxSize: 2
      Subnets:
        - !Ref capstone21publicSubnet
        - !Ref capstone21privateSubnet
    DependsOn:
      - capstone21Cluster